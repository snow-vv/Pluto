"""
Django settings for medivh project.

Generated by 'django-admin startproject' using Django 1.11.1.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import raven
from celery.schedules import crontab

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'sh_g=mev_430-uk30n-m5h5f1ggh7x54*rn5&am7l+oyg^j@2v'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['0.0.0.0']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'raven.contrib.django.raven_compat',
    'golive',
    'accounts',
    'cmdb',
    'shield',
    'permission',
    'service',
    'periodic',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'common.middleware.ProfileMiddleware',
]

ROOT_URLCONF = 'medivh.urls'

WSGI_APPLICATION = 'medivh.wsgi.application'

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

TEMPLATE_DIRS = (
    os.path.join(BASE_DIR, 'templates'),
)

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.jinja2.Jinja2',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'environment': 'common.utils.jinja2.environment',
        },
    },
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": TEMPLATE_DIRS,
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.contrib.auth.context_processors.auth",
                "django.template.context_processors.debug",
                "django.template.context_processors.i18n",
                "django.template.context_processors.media",
                "django.template.context_processors.static",
                "django.template.context_processors.tz",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]
# LOGIN_URL = '/admin/login/'
PRIVATE_KEY_FILE = '~/.ssh/id_rsa.pub'
GM_CONFIG_PATH = '/Users/Zyy/gengmei/configs'
GM_CONFIG_REPO = 'git@git.wanmeizhensuo.com:ops/configs.git'
HIPCHAT_TOKEN = ''
HIPCHAT_HOST = ''

HIPCHAT_TASK_ROOM = 194
HIPCHAT_LOG_ROOM = 194
HIPCHAT_PLAN_STATUS_ROOM = 194
APPEND_SLASH = False
SENTRY_CELERY_ENDPOINT = ''
RAVEN_CONFIG = {
    'dsn': '',
    # If you are using git, you can also automatically configure the
    # release based on the git info.
    'release': raven.fetch_git_sha(BASE_DIR),
}
ENV = 'prod'
NPM_PATH = '/home/gmuser/.nvm/versions/node/v6.9.4/bin/npm'
NVM_SH = "/home/gmuser/.nvm/nvm.sh"
# 线上的
ALIYUN_ACCESS_KEY = ''
ALIYUN_KEY_SECRET = ''

# 慢日志抓取时间间隔，单位(s)
CRAWL_SLOW_LOG_TIME = 60 * 5
# CELERYBEAT
CELERY_BEAT_SCHEDULE = {
    "push_rds_slow_log_to_dingding": {
        'task': 'periodic.tasks.push_rds_slow_log_to_dingding',
        'schedule': float(CRAWL_SLOW_LOG_TIME),
        'args': (),
    },
    "send_slow_log_to_emails": {
        'task': 'periodic.tasks.send_slow_log_to_emails',
        'schedule': crontab(hour=10, minute=0),
        'args': (),
    },
}

SLOW_QUERY_TO_EMAILS = [
    'xuepengfei@igengmei.com',
    'nijiahua@igengmei.com',
    'zhaoyun@igengmei.com',
    'zhengwei@igengmei.com',
    'liuyingjie@igengmei.com',
    'wangpenghong@igengmei.com',
]

# 路由规则获取、配置URL
NAMERD_DTAB_GM_URL = ''

from .log_settings import *
from .settings_local import *
